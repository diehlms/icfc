services:
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      # - "443:443"
    volumes:
      - ./proxy/nginx.conf:/etc/nginx/nginx.conf:ro
      # - ./proxy/nginx.prod.conf:/etc/nginx/conf.d/nginx.prod.conf
      # - ./certbot/conf:/etc/letsencrypt
      # - ./certbot/www:/var/www/certbot
    # command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    depends_on:
      - web
    networks:
      - app_network

  # certbot:
  #   image: certbot/certbot
  #   volumes:
  #     - ./certbot/conf:/etc/letsencrypt
  #     - ./certbot/www:/var/www/certbot
  #   entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
  #   networks:
  #     - app_network

  web:
    image: ghcr.io/diehlms/icfc-www:latest
    entrypoint: ["/bin/bash", "/rails/entrypoint.sh"]
    environment:
      - RAILS_ENV=production
      - RAILS_SERVE_STATIC_FILES=true
    ports:
      - 3000:3000
    env_file:
      - ".env"
    volumes:
      - ./entrypoint.sh:/rails/entrypoint.sh
      - ./storage:/rails/storage
    networks:
      - app_network

  postgres:
    image: postgres:16-bullseye
    ports:
      - "8881:5432"
    env_file:
      - ".env"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app_network

volumes:
  gems:
  postgres-data:

networks:
  app_network:
    driver: bridge