{"ast":null,"code":"var _jsxFileName = \"/Users/diehl/Documents/Projects/icfc/app/javascript/src/components/familyTrees/Index.js\";\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useEffect, useState } from 'react';\nimport axiosClient from '../../services/axios';\nimport { useDispatch } from 'react-redux';\nimport * as actions from '../../store/actions/index';\nexport default function Index(props) {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      familyTrees = _useState2[0],\n      setFamilyTrees = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isAuthenticated = _useState4[0],\n      setIsAuthenticated = _useState4[1];\n\n  var dispatch = useDispatch();\n  useEffect(function () {\n    dispatch(actions.loadingStart());\n    var mounted = true;\n    axiosClient.get('entry/initial_payload').then(function (res) {\n      if (mounted) {\n        setIsAuthenticated(res.data.logged_in);\n        getFamilyTrees();\n      }\n    })[\"catch\"](function (err) {\n      dispatch(actions.setErrors(err.response.data.errors));\n    });\n    dispatch(actions.loadingFinish());\n    return function () {\n      mounted = false;\n    };\n  }, []);\n\n  var handleCreateTree = function handleCreateTree() {\n    createFamilyTree(newTreeName).then(function (newTree) {\n      setFamilyTrees([].concat(_toConsumableArray(familyTrees), [newTree]));\n      setNewTreeName('');\n    });\n  };\n\n  var postFamilyTree = function postFamilyTree(e) {\n    e.preventDefault();\n    var body = {\n      name: committeeName,\n      url: committeeUrl\n    };\n    axiosClient.post(\"family_trees\", body).then(function (res) {})[\"catch\"](function (err) {\n      dispatch(actions.setErrors(err.response.data.errors));\n    });\n  };\n\n  var getFamilyTrees = function getFamilyTrees() {\n    axiosClient.get('family_trees').then(function (res) {\n      console.log(res);\n      setFamilyTrees(res.data.family_trees);\n    })[\"catch\"](function (err) {\n      dispatch(actions.setErrors(err.response.data.errors));\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: newTreeName,\n    onChange: function onChange(e) {\n      return setNewTreeName(e.target.value);\n    },\n    placeholder: \"New Family Tree Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleCreateTree,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, \"Create Tree\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, familyTrees.map(function (tree) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: tree.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }, tree.name);\n  }))));\n}","map":{"version":3,"sources":["/Users/diehl/Documents/Projects/icfc/app/javascript/src/components/familyTrees/Index.js"],"names":["React","useEffect","useState","axiosClient","useDispatch","actions","Index","props","familyTrees","setFamilyTrees","isAuthenticated","setIsAuthenticated","dispatch","loadingStart","mounted","get","then","res","data","logged_in","getFamilyTrees","err","setErrors","response","errors","loadingFinish","handleCreateTree","createFamilyTree","newTreeName","newTree","setNewTreeName","postFamilyTree","e","preventDefault","body","name","committeeName","url","committeeUrl","post","console","log","family_trees","target","value","map","tree","id"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AAEA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAO,KAAKC,OAAZ,MAAyB,2BAAzB;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AACjC,kBAAsCL,QAAQ,CAAC,EAAD,CAA9C;AAAA;AAAA,MAAOM,WAAP;AAAA,MAAoBC,cAApB;;AACA,mBAA8CP,QAAQ,CAAC,KAAD,CAAtD;AAAA;AAAA,MAAOQ,eAAP;AAAA,MAAwBC,kBAAxB;;AAEA,MAAMC,QAAQ,GAAGR,WAAW,EAA5B;AAEAH,EAAAA,SAAS,CAAC,YAAM;AACZW,IAAAA,QAAQ,CAACP,OAAO,CAACQ,YAAR,EAAD,CAAR;AACA,QAAIC,OAAO,GAAG,IAAd;AACAX,IAAAA,WAAW,CAACY,GAAZ,CAAgB,uBAAhB,EACCC,IADD,CACM,UAAAC,GAAG,EAAI;AACT,UAAIH,OAAJ,EAAa;AACTH,QAAAA,kBAAkB,CAACM,GAAG,CAACC,IAAJ,CAASC,SAAV,CAAlB;AACAC,QAAAA,cAAc;AACjB;AACJ,KAND,WAOO,UAAAC,GAAG,EAAI;AACVT,MAAAA,QAAQ,CAACP,OAAO,CAACiB,SAAR,CAAkBD,GAAG,CAACE,QAAJ,CAAaL,IAAb,CAAkBM,MAApC,CAAD,CAAR;AACH,KATD;AAUAZ,IAAAA,QAAQ,CAACP,OAAO,CAACoB,aAAR,EAAD,CAAR;AACA,WAAO,YAAM;AACTX,MAAAA,OAAO,GAAG,KAAV;AACH,KAFD;AAGH,GAjBQ,EAiBN,EAjBM,CAAT;;AAmBA,MAAMY,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC3BC,IAAAA,gBAAgB,CAACC,WAAD,CAAhB,CAA8BZ,IAA9B,CAAmC,UAAAa,OAAO,EAAI;AAC5CpB,MAAAA,cAAc,8BAAKD,WAAL,IAAkBqB,OAAlB,GAAd;AACAC,MAAAA,cAAc,CAAC,EAAD,CAAd;AACD,KAHD;AAIH,GALD;;AAOA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,CAAD,EAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIC,IAAI,GAAG;AACPC,MAAAA,IAAI,EAAEC,aADC;AAEPC,MAAAA,GAAG,EAAEC;AAFE,KAAX;AAIAnC,IAAAA,WAAW,CAACoC,IAAZ,iBAAiCL,IAAjC,EACClB,IADD,CACM,UAAAC,GAAG,EAAI,CACZ,CAFD,WAGO,UAAAI,GAAG,EAAI;AACVT,MAAAA,QAAQ,CAACP,OAAO,CAACiB,SAAR,CAAkBD,GAAG,CAACE,QAAJ,CAAaL,IAAb,CAAkBM,MAApC,CAAD,CAAR;AACH,KALD;AAMH,GAZD;;AAcA,MAAMJ,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AACzBjB,IAAAA,WAAW,CAACY,GAAZ,CAAgB,cAAhB,EACCC,IADD,CACM,UAAAC,GAAG,EAAI;AACTuB,MAAAA,OAAO,CAACC,GAAR,CAAYxB,GAAZ;AACAR,MAAAA,cAAc,CAACQ,GAAG,CAACC,IAAJ,CAASwB,YAAV,CAAd;AACH,KAJD,WAKO,UAAArB,GAAG,EAAI;AACVT,MAAAA,QAAQ,CAACP,OAAO,CAACiB,SAAR,CAAkBD,GAAG,CAACE,QAAJ,CAAaL,IAAb,CAAkBM,MAApC,CAAD,CAAR;AACH,KAPD;AAQH,GATD;;AAWA,sBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,KAAK,EAAEI,WADX;AAEI,IAAA,QAAQ,EAAE,kBAAAI,CAAC;AAAA,aAAIF,cAAc,CAACE,CAAC,CAACW,MAAF,CAASC,KAAV,CAAlB;AAAA,KAFf;AAGI,IAAA,WAAW,EAAC,sBAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAMI;AAAQ,IAAA,OAAO,EAAElB,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBANJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKlB,WAAW,CAACqC,GAAZ,CAAgB,UAAAC,IAAI;AAAA,wBACrB;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmBD,IAAI,CAACX,IAAxB,CADqB;AAAA,GAApB,CADL,CAPJ,CADJ,CADJ;AAiBH","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axiosClient from '../../services/axios';\n\nimport { useDispatch } from 'react-redux';\nimport * as actions from '../../store/actions/index';\n\nexport default function Index(props) {\n    const [familyTrees, setFamilyTrees] = useState([]);\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(actions.loadingStart());\n        let mounted = true;\n        axiosClient.get('entry/initial_payload')\n        .then(res => {\n            if (mounted) {\n                setIsAuthenticated(res.data.logged_in);\n                getFamilyTrees();\n            }\n        })\n        .catch(err => {\n            dispatch(actions.setErrors(err.response.data.errors));\n        });\n        dispatch(actions.loadingFinish());\n        return () => {\n            mounted = false;\n        }\n    }, []);\n\n    const handleCreateTree = () => {\n        createFamilyTree(newTreeName).then(newTree => {\n          setFamilyTrees([...familyTrees, newTree]);\n          setNewTreeName('');\n        });\n    };\n\n    const postFamilyTree = (e) => {\n        e.preventDefault();\n        let body = {\n            name: committeeName,\n            url: committeeUrl   \n        }\n        axiosClient.post(`family_trees`, body)\n        .then(res => {\n        })\n        .catch(err => {\n            dispatch(actions.setErrors(err.response.data.errors));\n        });\n    }\n\n    const getFamilyTrees = () => {\n        axiosClient.get('family_trees')\n        .then(res => {\n            console.log(res)\n            setFamilyTrees(res.data.family_trees)\n        })\n        .catch(err => {\n            dispatch(actions.setErrors(err.response.data.errors));\n        });\n    }\n\n    return (\n        <React.Fragment>\n            <div>\n                <input \n                    value={newTreeName} \n                    onChange={e => setNewTreeName(e.target.value)} \n                    placeholder=\"New Family Tree Name\" \n                />\n                <button onClick={handleCreateTree}>Create Tree</button>\n                <ul>\n                    {familyTrees.map(tree => (\n                    <li key={tree.id}>{tree.name}</li>\n                    ))}\n                </ul>\n            </div>\n        </React.Fragment>\n    )\n}"]},"metadata":{},"sourceType":"module"}