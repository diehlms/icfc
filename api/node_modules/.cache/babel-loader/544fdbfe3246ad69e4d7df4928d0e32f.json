{"ast":null,"code":"import * as actions from './actionTypes';\nexport var fetchArticles = function fetchArticles(userId) {\n  var url = \"/api/v1/articles/index\";\n  return function (dispatch) {\n    fetch(url).then(function (res) {\n      if (res.ok) {\n        return res.json();\n      } else {\n        dispatch(fetchArticlesFail());\n      }\n    }).then(function (res) {\n      if (userId) {\n        dispatch(fetchArticlesSuccessForUser(res, userId));\n      } else {\n        dispatch(fetchArticlesSuccess(res));\n      }\n    });\n  };\n};\nexport var fetchArticlesInit = function fetchArticlesInit() {\n  return {\n    type: actions.LOADING_START\n  };\n};\nexport var fetchArticlesSuccess = function fetchArticlesSuccess(res) {\n  return {\n    type: actions.FETCH_ARTICLES_SUCCESS,\n    res: res\n  };\n};\nexport var fetchArticlesSuccessForUser = function fetchArticlesSuccessForUser(res, userId) {\n  return {\n    type: actions.FETCH_ARTICLES_FOR_USER_SUCCESS,\n    res: res,\n    userId: userId\n  };\n};\nexport var fetchArticlesFail = function fetchArticlesFail() {\n  return {\n    type: actions.FETCH_ARTICLES_FAIL\n  };\n};\nexport var createArticle = function createArticle(title, content, userId, image) {\n  return function (dispatch) {\n    dispatch(createArticleInit());\n    var url = \"/api/v1/articles/create\";\n    var token = document.querySelector('meta[name=\"csrf-token\"]').content;\n\n    if (image !== null) {\n      var body = new FormData();\n      body.append('title', title);\n      body.append('content', content);\n      body.append('userId', userId);\n      body.append('image', image);\n      fetch(url, {\n        method: \"POST\",\n        headers: {\n          \"X-CSRF-Token\": token\n        },\n        body: body\n      }).then(function (res) {\n        if (res.ok) {\n          return res.json();\n        } else {\n          dispatch(createArticleFail());\n        }\n      }).then(function (res) {\n        return dispatch(createArticleSuccess(res));\n      });\n    } else {\n      var _body = {\n        \"title\": title,\n        \"content\": content,\n        \"userId\": userId\n      };\n      fetch(url, {\n        method: \"POST\",\n        headers: {\n          \"X-CSRF-Token\": token,\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(_body)\n      }).then(function (res) {\n        if (res.ok) {\n          return res.json();\n        } else {\n          dispatch(createArticleFail());\n        }\n      }).then(function (res) {\n        return dispatch(createArticleSuccess(res));\n      });\n    }\n  };\n};\nexport var createArticleInit = function createArticleInit() {\n  return {\n    type: actions.LOADING_START\n  };\n};\nexport var createArticleSuccess = function createArticleSuccess(res) {\n  return {\n    type: actions.LOADING_FINISH,\n    res: res\n  };\n};\nexport var createArticleFail = function createArticleFail(err) {\n  return {\n    type: actions.LOADING_FINISH\n  };\n};\nexport var deleteArticle = function deleteArticle(id) {\n  var url = \"/api/v1/articles/destroy/\".concat(id);\n  var token = document.querySelector('meta[name=\"csrf-token\"]').content;\n  return function (dispatch) {\n    dispatch(deleteArticleInit());\n    fetch(url, {\n      method: \"DELETE\",\n      headers: {\n        \"X-CSRF-Token\": token,\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(function (response) {\n      if (response.ok) {\n        return response.json();\n      }\n\n      dispatch(deleteArticleFail());\n    }).then(dispatch(deleteArticleSuccess()))[\"catch\"](function (error) {\n      return console.log(error.message);\n    });\n  };\n};\nexport var deleteArticleInit = function deleteArticleInit() {\n  return {\n    type: actions.LOADING_START\n  };\n};\nexport var deleteArticleSuccess = function deleteArticleSuccess() {\n  return {\n    type: actions.LOADING_FINISH\n  };\n};\nexport var deleteArticleFail = function deleteArticleFail() {\n  return {\n    type: actions.LOADING_FINISH\n  };\n};","map":{"version":3,"sources":["/Users/diehl/Documents/Projects/icfc/app/javascript/src/store/actions/articles.js"],"names":["actions","fetchArticles","userId","url","dispatch","fetch","then","res","ok","json","fetchArticlesFail","fetchArticlesSuccessForUser","fetchArticlesSuccess","fetchArticlesInit","type","LOADING_START","FETCH_ARTICLES_SUCCESS","FETCH_ARTICLES_FOR_USER_SUCCESS","FETCH_ARTICLES_FAIL","createArticle","title","content","image","createArticleInit","token","document","querySelector","body","FormData","append","method","headers","createArticleFail","createArticleSuccess","JSON","stringify","LOADING_FINISH","err","deleteArticle","id","deleteArticleInit","response","deleteArticleFail","deleteArticleSuccess","error","console","log","message"],"mappings":"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","sourcesContent":["import * as actions from './actionTypes';\n\nexport const fetchArticles = userId => {\n    const url = \"/api/v1/articles/index\";\n    return dispatch => {\n        fetch(url)\n            .then(res => {\n                if (res.ok) {\n                    return res.json()\n                } else {\n                    dispatch(fetchArticlesFail())\n                }})\n            .then(res => {\n                if (userId) {\n                    dispatch(fetchArticlesSuccessForUser(res, userId))\n                } else {\n                    dispatch(fetchArticlesSuccess(res))\n                }\n            }\n        )\n    }\n}\n\nexport const fetchArticlesInit = () => {\n    return {\n        type: actions.LOADING_START\n    }\n}\n\nexport const fetchArticlesSuccess = res => {\n    return {\n        type: actions.FETCH_ARTICLES_SUCCESS,\n        res\n    }\n}\n\nexport const fetchArticlesSuccessForUser = (res, userId) => {\n    return {\n        type: actions.FETCH_ARTICLES_FOR_USER_SUCCESS,\n        res,\n        userId\n    }\n}\n\nexport const fetchArticlesFail = () => {\n    return {\n        type: actions.FETCH_ARTICLES_FAIL,\n    }\n}\n\nexport const createArticle = (title, content, userId, image) => {\n    return dispatch => {\n        dispatch(createArticleInit());\n        const url = \"/api/v1/articles/create\";\n        const token = document.querySelector('meta[name=\"csrf-token\"]').content;\n        if(image !== null){\n            let body = new FormData();\n            body.append('title', title);\n            body.append('content', content);\n            body.append('userId', userId);\n            body.append('image', image);\n            fetch(url, {\n                method: \"POST\",\n                headers: {\n                    \"X-CSRF-Token\": token\n                },\n                body: body\n            })\n            .then(res => {\n                if (res.ok) {\n                    return res.json()\n                } else {\n                    dispatch(createArticleFail())\n                }\n            })\n            .then(res => dispatch(createArticleSuccess(res)))\n        } else {\n            let body = {\n                \"title\": title,\n                \"content\": content,\n                \"userId\": userId,\n            }\n            fetch(url, {\n                method: \"POST\",\n                headers: {\n                    \"X-CSRF-Token\": token,\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(body)\n            })\n            .then(res => {\n                if (res.ok) {\n                    return res.json()\n                } else {\n                    dispatch(createArticleFail())\n                }\n            })\n            .then(res => dispatch(createArticleSuccess(res)))\n            }\n        }   \n}\n\nexport const createArticleInit = () => {\n    return {\n        type: actions.LOADING_START\n    }\n}\n\nexport const createArticleSuccess = res => {\n    return {\n        type: actions.LOADING_FINISH,\n        res\n    }\n}\n\nexport const createArticleFail = err => {\n    return {\n        type: actions.LOADING_FINISH,\n    }\n}\n\nexport const deleteArticle = id => {\n    const url = `/api/v1/articles/destroy/${id}`;\n    const token = document.querySelector('meta[name=\"csrf-token\"]').content;\n    return dispatch => {\n        dispatch(deleteArticleInit())\n        fetch(url, {\n            method: \"DELETE\",\n            headers: {\n              \"X-CSRF-Token\": token,\n              \"Content-Type\": \"application/json\"\n            }\n        })\n        .then(response => {\n        if (response.ok) {\n            return response.json();\n        }\n            dispatch(deleteArticleFail())\n        })\n        .then(dispatch(deleteArticleSuccess()))\n        .catch(error => console.log(error.message));\n    }\n}\n\nexport const deleteArticleInit = () => {\n    return {\n        type: actions.LOADING_START\n    }\n}\n\nexport const deleteArticleSuccess = () => {\n    return {\n        type: actions.LOADING_FINISH\n    }\n}\n\nexport const deleteArticleFail = () => {\n    return {\n        type: actions.LOADING_FINISH\n    }\n}"]},"metadata":{},"sourceType":"module"}