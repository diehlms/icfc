{"ast":null,"code":"var _jsxFileName = \"/Users/diehl/Documents/Projects/icfc/app/javascript/src/components/staticPages/FamilyAgreements.js\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport React from 'react';\nimport Title from '../shared/PageTitle';\nimport { Container } from 'semantic-ui-react';\nimport { Message } from 'semantic-ui-react';\n\nvar Index = /*#__PURE__*/function (_React$Component) {\n  _inherits(Index, _React$Component);\n\n  var _super = _createSuper(Index);\n\n  function Index() {\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"reactPageAppContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Title, {\n        size: \"h1\",\n        text: \"Family Agreements\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Message, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Message.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }\n      }, \"March 30, 2012\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }\n      }, \"Club Policy Regarding Family Agreements relating to ICFC expense sharing and membership transfer\")), /*#__PURE__*/React.createElement(Container, {\n        text: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }\n      }, \"The Club is aware that over the years quite a few ICFC member families have entered into private agreements among family members to address and govern the sharing of ICFCrelated expenses (including cottage ownership, cottage maintenance and dues) among family members. In some instances, family agreements also address the subjects of membership status and transfers of membership among family members.\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }\n      }, \"The Club recognizes that such agreements can be useful means of resolving uncertainty regarding the issues that they address. The Club believes that it is appropriate for family members to enter into such agreements when they desire to do so. The Club will honor outcomes dictated by such agreements where the outcomes are consistent with existing Club ByLaws.\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }\n      }, \"The Club will take no position regarding the enforceability of private family agreements. It will offer no advice regarding the terms of such agreements, and will have no role in the enforcement or interpretation of such agreements. In matters of Club affairs, the ICFC By-Laws as drafted take precedence over anything to the contrary in a private family agreement. (By way of example, it would be contrary to the By-Laws and the By-Laws would take precedence if a family agreement said that siblings A and B were both deemed to be corporate members, even though only one of them had been elected a corporate member and paid corporate dues.)\")));\n    }\n  }]);\n\n  return Index;\n}(React.Component);\n\nexport default Index;","map":{"version":3,"sources":["/Users/diehl/Documents/Projects/icfc/app/javascript/src/components/staticPages/FamilyAgreements.js"],"names":["React","Title","Container","Message","Index","state","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,SAASC,SAAT,QAAkC,mBAAlC;AACA,SAASC,OAAT,QAAwB,mBAAxB;;IAEMC,K;;;;;;;;;;;;;;;UACFC,K,GAAQ,E;;;;;;WAGR,kBAAS;AAEL,0BACI;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,KAAD;AACI,QAAA,IAAI,EAAC,IADT;AAEI,QAAA,IAAI,EAAC,mBAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,eAKI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,OAAD,CAAS,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4GAFJ,CALJ,eAWI,oBAAC,SAAD;AAAW,QAAA,IAAI,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8ZADJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oXALJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6oBATJ,CAXJ,CADJ;AA+BH;;;;EArCeL,KAAK,CAACM,S;;AAyC1B,eAAeF,KAAf","sourcesContent":["import React from 'react';\nimport Title from '../shared/PageTitle';\nimport { Container, Header } from 'semantic-ui-react';\nimport { Message } from 'semantic-ui-react';\n\nclass Index extends React.Component {\n    state = {\n    }\n\n    render() {\n\n        return (\n            <div className=\"reactPageAppContainer\">\n                <Title\n                    size=\"h1\"\n                    text=\"Family Agreements\"\n                />\n                <Message>\n                    <Message.Header>March 30, 2012</Message.Header>\n                    <p>\n                        Club Policy Regarding Family Agreements relating to ICFC expense sharing and membership transfer\n                    </p>\n                </Message>\n                <Container text>\n                    <p>The Club is aware that over the years quite a few ICFC member families have entered\n                    into private agreements among family members to address and govern the sharing of ICFCrelated expenses (including cottage ownership, cottage maintenance and dues) among family\n                    members. In some instances, family agreements also address the subjects of membership status\n                    and transfers of membership among family members.</p>\n                    <p>The Club recognizes that such agreements can be useful means of resolving uncertainty\n                    regarding the issues that they address. The Club believes that it is appropriate for family\n                    members to enter into such agreements when they desire to do so. The Club will honor\n                    outcomes dictated by such agreements where the outcomes are consistent with existing Club ByLaws.</p>\n                    <p>The Club will take no position regarding the enforceability of private family agreements.\n                    It will offer no advice regarding the terms of such agreements, and will have no role in the\n                    enforcement or interpretation of such agreements. In matters of Club affairs, the ICFC By-Laws\n                    as drafted take precedence over anything to the contrary in a private family agreement. (By way\n                    of example, it would be contrary to the By-Laws and the By-Laws would take precedence if a\n                    family agreement said that siblings A and B were both deemed to be corporate members, even\n                    though only one of them had been elected a corporate member and paid corporate dues.)</p>\n                </Container>\n            </div>\n        )\n    }\n}\n\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}