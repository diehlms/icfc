{"ast":null,"code":"var _jsxFileName = \"/Users/diehl/Documents/Projects/icfc/app/javascript/src/components/familyTrees/Show.js\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useEffect, useState } from 'react';\nimport axiosClient from '../../services/axios';\nimport { useDispatch } from 'react-redux';\nimport * as actions from '../../store/actions/index';\nimport 'reactflow/dist/style.css';\nexport default function Index(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      family = _useState2[0],\n      setFamily = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isAuthenticated = _useState4[0],\n      setIsAuthenticated = _useState4[1];\n\n  var _useState5 = useState(family.family_members),\n      _useState6 = _slicedToArray(_useState5, 2),\n      members = _useState6[0],\n      setMembers = _useState6[1];\n\n  var _useState7 = useState({\n    name: '',\n    relationship: '',\n    parent_id: null\n  }),\n      _useState8 = _slicedToArray(_useState7, 2),\n      newMember = _useState8[0],\n      setNewMember = _useState8[1];\n\n  var dispatch = useDispatch();\n  useEffect(function () {\n    dispatch(actions.loadingStart());\n    var mounted = true;\n    axiosClient.get('entry/initial_payload').then(function (res) {\n      if (mounted) {\n        setIsAuthenticated(res.data.logged_in);\n        getFamily();\n      }\n    })[\"catch\"](function (err) {\n      dispatch(actions.setErrors(err.response.data.errors));\n    });\n    dispatch(actions.loadingFinish());\n    return function () {\n      mounted = false;\n    };\n  }, []);\n\n  var postFamilyMember = function postFamilyMember(e) {\n    e.preventDefault();\n    var body = {\n      family_member: {\n        \"name\": newMember.name,\n        \"relationship\": newMember.relationship,\n        \"family_tree_id\": props.match.params.id,\n        \"parent_id\": null\n      }\n    };\n    axiosClient.post(\"family_members/create\", body).then(function (res) {\n      setFamily(res.data);\n    })[\"catch\"](function (err) {\n      dispatch(actions.setErrors(err.response.data.errors));\n    });\n  };\n\n  var getFamily = function getFamily() {\n    axiosClient.get(\"family_trees/\".concat(props.match.params.id)).then(function (res) {\n      setMembers(res.data.family_members);\n    })[\"catch\"](function (err) {\n      dispatch(actions.setErrors(err.response.data.errors));\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"reactPageAppContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  });\n}\n{\n  /* <input \n   value={newMember.name} \n   onChange={e => setNewMember({ ...newMember, name: e.target.value })} \n   placeholder=\"Member Name\" \n  />\n  <select \n   value={newMember.relationship} \n   onChange={e => setNewMember({ ...newMember, relationship: e.target.value })}\n  >\n   <option value=\"\">Select Relationship</option>\n   <option value=\"father\">Father</option>\n   <option value=\"mother\">Mother</option>\n   <option value=\"brother\">Brother</option>\n   <option value=\"sister\">Sister</option>\n   <option value=\"son\">Son</option>\n   <option value=\"daughter\">Daughter</option>\n  </select>\n  <button onClick={postFamilyMember}>Add Member</button>\n  <ul>\n       {members ? (\n           <ul>\n               {members.map((member, i) => (\n                   <li key={member.id}>{member.name} ({member.relationship})</li>\n               ))}\n           </ul>\n           ) : <></>\n       }\n  </ul> */\n}","map":{"version":3,"sources":["/Users/diehl/Documents/Projects/icfc/app/javascript/src/components/familyTrees/Show.js"],"names":["React","useEffect","useState","axiosClient","useDispatch","actions","Index","props","family","setFamily","isAuthenticated","setIsAuthenticated","family_members","members","setMembers","name","relationship","parent_id","newMember","setNewMember","dispatch","loadingStart","mounted","get","then","res","data","logged_in","getFamily","err","setErrors","response","errors","loadingFinish","postFamilyMember","e","preventDefault","body","family_member","match","params","id","post"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAO,KAAKC,OAAZ,MAAyB,2BAAzB;AAEA,OAAO,0BAAP;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACjC,kBAA4BL,QAAQ,CAAC,EAAD,CAApC;AAAA;AAAA,MAAOM,MAAP;AAAA,MAAeC,SAAf;;AACA,mBAA8CP,QAAQ,CAAC,KAAD,CAAtD;AAAA;AAAA,MAAOQ,eAAP;AAAA,MAAwBC,kBAAxB;;AACA,mBAA8BT,QAAQ,CAACM,MAAM,CAACI,cAAR,CAAtC;AAAA;AAAA,MAAOC,OAAP;AAAA,MAAgBC,UAAhB;;AACA,mBAAkCZ,QAAQ,CAAC;AAAEa,IAAAA,IAAI,EAAE,EAAR;AAAYC,IAAAA,YAAY,EAAE,EAA1B;AAA8BC,IAAAA,SAAS,EAAE;AAAzC,GAAD,CAA1C;AAAA;AAAA,MAAOC,SAAP;AAAA,MAAkBC,YAAlB;;AAEA,MAAMC,QAAQ,GAAGhB,WAAW,EAA5B;AAEAH,EAAAA,SAAS,CAAC,YAAM;AACZmB,IAAAA,QAAQ,CAACf,OAAO,CAACgB,YAAR,EAAD,CAAR;AACA,QAAIC,OAAO,GAAG,IAAd;AACAnB,IAAAA,WAAW,CAACoB,GAAZ,CAAgB,uBAAhB,EACCC,IADD,CACM,UAAAC,GAAG,EAAI;AACT,UAAIH,OAAJ,EAAa;AACTX,QAAAA,kBAAkB,CAACc,GAAG,CAACC,IAAJ,CAASC,SAAV,CAAlB;AACAC,QAAAA,SAAS;AACZ;AACJ,KAND,WAOO,UAAAC,GAAG,EAAI;AACVT,MAAAA,QAAQ,CAACf,OAAO,CAACyB,SAAR,CAAkBD,GAAG,CAACE,QAAJ,CAAaL,IAAb,CAAkBM,MAApC,CAAD,CAAR;AACH,KATD;AAUAZ,IAAAA,QAAQ,CAACf,OAAO,CAAC4B,aAAR,EAAD,CAAR;AACA,WAAO,YAAM;AACTX,MAAAA,OAAO,GAAG,KAAV;AACH,KAFD;AAGH,GAjBQ,EAiBN,EAjBM,CAAT;;AAmBA,MAAMY,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,CAAD,EAAO;AAC5BA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIC,IAAI,GAAG;AACPC,MAAAA,aAAa,EAAE;AACX,gBAAQpB,SAAS,CAACH,IADP;AAEX,wBAAgBG,SAAS,CAACF,YAFf;AAGX,0BAAkBT,KAAK,CAACgC,KAAN,CAAYC,MAAZ,CAAmBC,EAH1B;AAIX,qBAAa;AAJF;AADR,KAAX;AAQAtC,IAAAA,WAAW,CAACuC,IAAZ,0BAA0CL,IAA1C,EACCb,IADD,CACM,UAAAC,GAAG,EAAI;AACThB,MAAAA,SAAS,CAACgB,GAAG,CAACC,IAAL,CAAT;AACH,KAHD,WAIO,UAAAG,GAAG,EAAI;AACVT,MAAAA,QAAQ,CAACf,OAAO,CAACyB,SAAR,CAAkBD,GAAG,CAACE,QAAJ,CAAaL,IAAb,CAAkBM,MAApC,CAAD,CAAR;AACH,KAND;AAOH,GAjBD;;AAmBA,MAAMJ,SAAS,GAAG,SAAZA,SAAY,GAAM;AACpBzB,IAAAA,WAAW,CAACoB,GAAZ,wBAAgChB,KAAK,CAACgC,KAAN,CAAYC,MAAZ,CAAmBC,EAAnD,GACCjB,IADD,CACM,UAAAC,GAAG,EAAI;AACTX,MAAAA,UAAU,CAACW,GAAG,CAACC,IAAJ,CAASd,cAAV,CAAV;AACH,KAHD,WAIO,UAAAiB,GAAG,EAAI;AACVT,MAAAA,QAAQ,CAACf,OAAO,CAACyB,SAAR,CAAkBD,GAAG,CAACE,QAAJ,CAAaL,IAAb,CAAkBM,MAApC,CAAD,CAAR;AACH,KAND;AAOH,GARD;;AAUA,sBACI;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAQH;AACS;AAAC;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAmB","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axiosClient from '../../services/axios';\nimport { useDispatch } from 'react-redux';\nimport * as actions from '../../store/actions/index';\nimport ReactFlow, { Background, Controls } from 'reactflow';\nimport 'reactflow/dist/style.css';\n\nexport default function Index(props) {\n    const [family, setFamily] = useState([]);\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\n    const [members, setMembers] = useState(family.family_members);\n    const [newMember, setNewMember] = useState({ name: '', relationship: '', parent_id: null });\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(actions.loadingStart());\n        let mounted = true;\n        axiosClient.get('entry/initial_payload')\n        .then(res => {\n            if (mounted) {\n                setIsAuthenticated(res.data.logged_in);\n                getFamily();\n            }\n        })\n        .catch(err => {\n            dispatch(actions.setErrors(err.response.data.errors));\n        });\n        dispatch(actions.loadingFinish());\n        return () => {\n            mounted = false;\n        }\n    }, []);\n\n    const postFamilyMember = (e) => {\n        e.preventDefault();\n        let body = {\n            family_member: {\n                \"name\": newMember.name,\n                \"relationship\": newMember.relationship,\n                \"family_tree_id\": props.match.params.id,\n                \"parent_id\": null\n            }\n        }\n        axiosClient.post(`family_members/create`, body)\n        .then(res => {\n            setFamily(res.data)\n        })\n        .catch(err => {\n            dispatch(actions.setErrors(err.response.data.errors));\n        });\n    }\n\n    const getFamily = () => {\n        axiosClient.get(`family_trees/${props.match.params.id}`)\n        .then(res => {\n            setMembers(res.data.family_members)\n        })\n        .catch(err => {\n            dispatch(actions.setErrors(err.response.data.errors));\n        });\n    }\n\n    return (\n        <div className=\"reactPageAppContainer\">\n            {/* <ReactFlow>\n                <Background />\n                <Controls />\n            </ReactFlow> */}\n        </div>\n    );\n}\n          {/* <input \n            value={newMember.name} \n            onChange={e => setNewMember({ ...newMember, name: e.target.value })} \n            placeholder=\"Member Name\" \n          />\n          <select \n            value={newMember.relationship} \n            onChange={e => setNewMember({ ...newMember, relationship: e.target.value })}\n          >\n            <option value=\"\">Select Relationship</option>\n            <option value=\"father\">Father</option>\n            <option value=\"mother\">Mother</option>\n            <option value=\"brother\">Brother</option>\n            <option value=\"sister\">Sister</option>\n            <option value=\"son\">Son</option>\n            <option value=\"daughter\">Daughter</option>\n          </select>\n          <button onClick={postFamilyMember}>Add Member</button>\n          <ul>\n                {members ? (\n                    <ul>\n                        {members.map((member, i) => (\n                            <li key={member.id}>{member.name} ({member.relationship})</li>\n                        ))}\n                    </ul>\n                    ) : <></>\n                }\n          </ul> */}"]},"metadata":{},"sourceType":"module"}