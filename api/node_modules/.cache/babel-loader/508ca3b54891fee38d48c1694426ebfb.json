{"ast":null,"code":"import * as actions from './actionTypes';\nimport axios from 'axios';\nexport var fetchCabins = function fetchCabins(userId) {\n  var url = \"/api/v1/cabins/index\";\n  return function (dispatch) {\n    fetch(url).then(function (res) {\n      if (res.ok) {\n        return res.json();\n      } else {\n        dispatch(fetchCabinsFail());\n      }\n    }).then(function (res) {\n      if (userId) {\n        dispatch(fetchCabinsForUserSuccess(res, userId));\n      } else {\n        dispatch(fetchCabinsSuccess(res));\n      }\n    });\n  };\n};\nexport var fetchCabinsSuccess = function fetchCabinsSuccess(res) {\n  return {\n    type: actions.FETCH_CABINS_SUCCESS,\n    res: res\n  };\n};\nexport var fetchCabinsForUserSuccess = function fetchCabinsForUserSuccess(res, userId) {\n  return {\n    type: actions.FETCH_CABINS_FOR_USER_SUCCESS,\n    res: res,\n    userId: userId\n  };\n};\nexport var fetchCabinsFail = function fetchCabinsFail() {\n  return {\n    type: actions.FETCH_CABINS_FAIL\n  };\n};\nexport var createCabin = function createCabin(name, bedrooms, description, userId, washerdryer, dock, price_per_day, price_per_week) {\n  var url = \"/api/v1/cabins/create\";\n  var body = {\n    \"name\": name,\n    \"bedrooms\": bedrooms,\n    \"description\": description,\n    \"userId\": userId,\n    \"washerdryer\": washerdryer,\n    \"dock\": dock,\n    \"price_per_day\": price_per_day,\n    \"price_per_week\": price_per_week\n  };\n  var token = document.querySelector('meta[name=\"csrf-token\"]').content;\n  return function (dispatch) {\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"X-CSRF-Token\": token,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    }).then(function (res) {\n      if (res.ok) {\n        return res.json();\n      } else {\n        dispatch(createCabinFail());\n      }\n    }).then(function (res) {\n      return dispatch(createCabinSuccess(res));\n    });\n  };\n};\nexport var addCabinImage = function addCabinImage(cabin_id, image) {\n  var url = \"/api/v1/cabins/\".concat(cabin_id);\n  var body = new FormData();\n  body.append('cabin_id', cabin_id);\n  body.append('image', image);\n  var token = document.querySelector('meta[name=\"csrf-token\"]').content;\n  return function (dispatch) {\n    dispatch(createCabinInit());\n    axios.put(url, {\n      headers: {\n        \"X-CSRF-Token\": token\n      },\n      body: body\n    }).then(function (res) {\n      if (res.ok) {\n        dispatch(addCabinImageSuccess());\n      }\n\n      dispatch(addCabinImageFail());\n    });\n  };\n};\nexport var createCabinInit = function createCabinInit() {\n  return {\n    type: actions.LOADING_START\n  };\n};\nexport var createCabinSuccess = function createCabinSuccess(res) {\n  return {\n    type: actions.LOADING_FINISH,\n    res: res\n  };\n};\nexport var createCabinFail = function createCabinFail(err) {\n  return {\n    type: actions.LOADING_FINISH\n  };\n};\nexport var deleteCabin = function deleteCabin(id) {\n  var url = \"/api/v1/cabins/destroy/\".concat(id);\n  var token = document.querySelector('meta[name=\"csrf-token\"]').content;\n  return function (dispatch) {\n    dispatch(deleteCabinInit());\n    axios[\"delete\"](url, {\n      headers: {\n        \"X-CSRF-Token\": token,\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(function (res) {\n      if (res.ok) {\n        dispatch(deleteCabinSuccess());\n      }\n\n      dispatch(deleteCabinFail());\n    });\n  };\n};\nexport var deleteCabinInit = function deleteCabinInit() {\n  return {\n    type: actions.LOADING_START\n  };\n};\nexport var deleteCabinSuccess = function deleteCabinSuccess() {\n  return {\n    type: actions.LOADING_FINISH\n  };\n};\nexport var deleteCabinFail = function deleteCabinFail() {\n  return {\n    type: actions.LOADING_FINISH\n  };\n};","map":{"version":3,"sources":["/Users/diehl/Documents/Projects/icfc/app/javascript/src/store/actions/cabins.js"],"names":["actions","axios","fetchCabins","userId","url","dispatch","fetch","then","res","ok","json","fetchCabinsFail","fetchCabinsForUserSuccess","fetchCabinsSuccess","type","FETCH_CABINS_SUCCESS","FETCH_CABINS_FOR_USER_SUCCESS","FETCH_CABINS_FAIL","createCabin","name","bedrooms","description","washerdryer","dock","price_per_day","price_per_week","body","token","document","querySelector","content","method","headers","JSON","stringify","createCabinFail","createCabinSuccess","addCabinImage","cabin_id","image","FormData","append","createCabinInit","put","addCabinImageSuccess","addCabinImageFail","LOADING_START","LOADING_FINISH","err","deleteCabin","id","deleteCabinInit","deleteCabinSuccess","deleteCabinFail"],"mappings":"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","sourcesContent":["import * as actions from './actionTypes';\nimport axios from 'axios'\n\nexport const fetchCabins = userId => {\n    const url = \"/api/v1/cabins/index\";\n    return dispatch => {\n        fetch(url)\n            .then(res => {\n                if (res.ok) {\n                    return res.json()\n                } else {\n                    dispatch(fetchCabinsFail())\n                }})\n            .then(res => {\n                if (userId) {\n                    dispatch(fetchCabinsForUserSuccess(res, userId))\n                } else {\n                    dispatch(fetchCabinsSuccess(res))\n                }\n            }\n        )\n    }   \n}\n\nexport const fetchCabinsSuccess = res => {\n    return {\n        type: actions.FETCH_CABINS_SUCCESS,\n        res\n    }\n}\n\nexport const fetchCabinsForUserSuccess = (res, userId) => {\n    return {\n        type: actions.FETCH_CABINS_FOR_USER_SUCCESS,\n        res,\n        userId\n    }\n}\n\nexport const fetchCabinsFail = () => {\n    return {\n        type: actions.FETCH_CABINS_FAIL,\n    }\n}\n\nexport const createCabin = (name, bedrooms, description, userId, washerdryer, dock, price_per_day, price_per_week) => {\n    const url = \"/api/v1/cabins/create\";\n    const body = {\n        \"name\": name,\n        \"bedrooms\": bedrooms,\n        \"description\": description,\n        \"userId\": userId,\n        \"washerdryer\": washerdryer,\n        \"dock\": dock,\n        \"price_per_day\": price_per_day,\n        \"price_per_week\": price_per_week\n    }\n    const token = document.querySelector('meta[name=\"csrf-token\"]').content;\n    return dispatch => {\n        fetch(url, {\n            method: \"POST\",\n            headers: {\n                \"X-CSRF-Token\": token,\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(body)\n        })\n        .then(res => {\n            if (res.ok) {\n                return res.json()\n            } else {\n                dispatch(createCabinFail())\n            }\n        })\n        .then(res => dispatch(createCabinSuccess(res)))\n    }\n}\n\nexport const addCabinImage = (cabin_id, image) => {\n    const url = `/api/v1/cabins/${cabin_id}`;\n    const body = new FormData();\n    body.append('cabin_id', cabin_id)\n    body.append('image', image)\n    const token = document.querySelector('meta[name=\"csrf-token\"]').content;\n    return dispatch => {\n        dispatch(createCabinInit())\n        axios.put(url, {\n              headers: {\n                \"X-CSRF-Token\": token,\n              },\n              body: body\n            })\n            .then(res => {\n                if (res.ok) {\n                    dispatch(addCabinImageSuccess())\n                }\n            dispatch(addCabinImageFail())\n        })\n    }\n}\n\nexport const createCabinInit = () => {\n    return {\n        type: actions.LOADING_START\n    }\n}\n\nexport const createCabinSuccess = res => {\n    return {\n        type: actions.LOADING_FINISH,\n        res\n    }\n}\n\nexport const createCabinFail = err => {\n    return {\n        type: actions.LOADING_FINISH,\n    }\n}\n\nexport const deleteCabin = id => {\n    const url = `/api/v1/cabins/destroy/${id}`;\n    const token = document.querySelector('meta[name=\"csrf-token\"]').content;\n    return dispatch => {\n        dispatch(deleteCabinInit())\n        axios.delete(url, {\n              headers: {\n                \"X-CSRF-Token\": token,\n                \"Content-Type\": \"application/json\"\n              }\n            })\n            .then(res => {\n                if (res.ok) {\n                    dispatch(deleteCabinSuccess())\n                }\n            dispatch(deleteCabinFail())\n        })\n    }\n}\n\nexport const deleteCabinInit = () => {\n    return {\n        type: actions.LOADING_START\n    }\n}\n\nexport const deleteCabinSuccess = () => {\n    return {\n        type: actions.LOADING_FINISH\n    }\n}\n\nexport const deleteCabinFail = () => {\n    return {\n        type: actions.LOADING_FINISH\n    }\n}"]},"metadata":{},"sourceType":"module"}