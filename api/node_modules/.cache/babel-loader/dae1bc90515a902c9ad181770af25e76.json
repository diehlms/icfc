{"ast":null,"code":"import * as actions from './actionTypes';\nimport axios from 'axios';\nexport var fetchEvents = function fetchEvents(userId) {\n  var url = \"/api/v1/events/index\";\n  return function (dispatch) {\n    fetch(url).then(function (res) {\n      if (res.ok) {\n        return res.json();\n      } else {\n        dispatch(fetchEventsFail());\n      }\n    }).then(function (res) {\n      if (userId) {\n        dispatch(fetchEventsForUserSuccess(res, userId));\n      } else {\n        dispatch(fetchEventsSuccess(res));\n      }\n    });\n  };\n};\nexport var fetchEventsSuccess = function fetchEventsSuccess(res) {\n  return {\n    type: actions.FETCH_EVENTS_SUCCESS,\n    res: res\n  };\n};\nexport var fetchEventsForUserSuccess = function fetchEventsForUserSuccess(res, userId) {\n  return {\n    type: actions.FETCH_EVENTS_FOR_USER_SUCCESS,\n    res: res,\n    userId: userId\n  };\n};\nexport var fetchEventsFail = function fetchEventsFail() {\n  return {\n    type: actions.FETCH_EVENTS_FAIL\n  };\n};\nexport var createEvent = function createEvent(events, location, start_time, end_time, userId, description) {\n  var url = \"/api/v1/events/create\";\n  var body = {\n    \"events\": events,\n    \"location\": location,\n    \"start_time\": start_time,\n    \"end_time\": end_time,\n    \"userId\": userId,\n    \"description\": description\n  };\n  var token = document.querySelector('meta[name=\"csrf-token\"]').content;\n  return function (dispatch) {\n    dispatch(createEventInit());\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"X-CSRF-Token\": token,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    }).then(function (res) {\n      if (res.ok) {\n        return res.json();\n      } else {\n        dispatch(createEventFail());\n      }\n    }).then(function (res) {\n      return dispatch(createEventSuccess(res));\n    });\n  };\n};\nexport var createEventInit = function createEventInit() {\n  return {\n    type: actions.LOADING_START\n  };\n};\nexport var createEventSuccess = function createEventSuccess(res) {\n  return {\n    type: actions.LOADING_FINISH,\n    res: res\n  };\n};\nexport var createEventFail = function createEventFail(err) {\n  return {\n    type: actions.LOADING_FINISH\n  };\n};\nexport var deleteEvent = function deleteEvent(id) {\n  var url = \"/api/v1/events/destroy/\".concat(id);\n  var token = document.querySelector('meta[name=\"csrf-token\"]').content;\n  return function (dispatch) {\n    dispatch(deleteEventInit());\n    axios[\"delete\"](url, {\n      headers: {\n        \"X-CSRF-Token\": token,\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(function (res) {\n      if (res.ok) {\n        dispatch(deleteEventSuccess());\n      }\n\n      dispatch(deleteEventFail());\n    });\n  };\n};\nexport var deleteEventInit = function deleteEventInit() {\n  return {\n    type: actions.LOADING_START\n  };\n};\nexport var deleteEventSuccess = function deleteEventSuccess() {\n  return {\n    type: actions.LOADING_FINISH\n  };\n};\nexport var deleteEventFail = function deleteEventFail() {\n  return {\n    type: actions.LOADING_FINISH\n  };\n};","map":{"version":3,"sources":["/Users/diehl/Documents/Projects/icfc/app/javascript/src/store/actions/events.js"],"names":["actions","axios","fetchEvents","userId","url","dispatch","fetch","then","res","ok","json","fetchEventsFail","fetchEventsForUserSuccess","fetchEventsSuccess","type","FETCH_EVENTS_SUCCESS","FETCH_EVENTS_FOR_USER_SUCCESS","FETCH_EVENTS_FAIL","createEvent","events","location","start_time","end_time","description","body","token","document","querySelector","content","createEventInit","method","headers","JSON","stringify","createEventFail","createEventSuccess","LOADING_START","LOADING_FINISH","err","deleteEvent","id","deleteEventInit","deleteEventSuccess","deleteEventFail"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,eAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,MAAM,EAAI;AACjC,MAAMC,GAAG,GAAG,sBAAZ;AACA,SAAO,UAAAC,QAAQ,EAAI;AACfC,IAAAA,KAAK,CAACF,GAAD,CAAL,CACKG,IADL,CACU,UAAAC,GAAG,EAAI;AACT,UAAIA,GAAG,CAACC,EAAR,EAAY;AACR,eAAOD,GAAG,CAACE,IAAJ,EAAP;AACH,OAFD,MAEO;AACHL,QAAAA,QAAQ,CAACM,eAAe,EAAhB,CAAR;AACH;AAAC,KANV,EAOKJ,IAPL,CAQQ,UAAAC,GAAG,EAAI;AACH,UAAIL,MAAJ,EAAY;AACRE,QAAAA,QAAQ,CAACO,yBAAyB,CAACJ,GAAD,EAAML,MAAN,CAA1B,CAAR;AACH,OAFD,MAEO;AACHE,QAAAA,QAAQ,CAACQ,kBAAkB,CAACL,GAAD,CAAnB,CAAR;AACH;AACJ,KAdT;AAgBH,GAjBD;AAkBH,CApBM;AAsBP,OAAO,IAAMK,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAL,GAAG,EAAI;AACrC,SAAO;AACHM,IAAAA,IAAI,EAAEd,OAAO,CAACe,oBADX;AAEHP,IAAAA,GAAG,EAAHA;AAFG,GAAP;AAIH,CALM;AAOP,OAAO,IAAMI,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACJ,GAAD,EAAML,MAAN,EAAiB;AACtD,SAAO;AACHW,IAAAA,IAAI,EAAEd,OAAO,CAACgB,6BADX;AAEHR,IAAAA,GAAG,EAAHA,GAFG;AAGHL,IAAAA,MAAM,EAANA;AAHG,GAAP;AAKH,CANM;AAQP,OAAO,IAAMQ,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AACjC,SAAO;AACHG,IAAAA,IAAI,EAAEd,OAAO,CAACiB;AADX,GAAP;AAGH,CAJM;AAMP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,MAAD,EAASC,QAAT,EAAmBC,UAAnB,EAA+BC,QAA/B,EAAyCnB,MAAzC,EAAiDoB,WAAjD,EAAiE;AACxF,MAAMnB,GAAG,GAAG,uBAAZ;AACA,MAAMoB,IAAI,GAAG;AACT,cAAUL,MADD;AAET,gBAAYC,QAFH;AAGT,kBAAcC,UAHL;AAIT,gBAAYC,QAJH;AAKT,cAAUnB,MALD;AAMT,mBAAeoB;AANN,GAAb;AAQA,MAAME,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAuB,yBAAvB,EAAkDC,OAAhE;AACA,SAAO,UAAAvB,QAAQ,EAAI;AACfA,IAAAA,QAAQ,CAACwB,eAAe,EAAhB,CAAR;AACAvB,IAAAA,KAAK,CAACF,GAAD,EAAM;AACP0B,MAAAA,MAAM,EAAE,MADD;AAEPC,MAAAA,OAAO,EAAE;AACL,wBAAgBN,KADX;AAEL,wBAAgB;AAFX,OAFF;AAMPD,MAAAA,IAAI,EAAEQ,IAAI,CAACC,SAAL,CAAeT,IAAf;AANC,KAAN,CAAL,CAQCjB,IARD,CAQM,UAAAC,GAAG,EAAI;AACT,UAAIA,GAAG,CAACC,EAAR,EAAY;AACR,eAAOD,GAAG,CAACE,IAAJ,EAAP;AACH,OAFD,MAEO;AACHL,QAAAA,QAAQ,CAAC6B,eAAe,EAAhB,CAAR;AACH;AACJ,KAdD,EAeC3B,IAfD,CAeM,UAAAC,GAAG;AAAA,aAAIH,QAAQ,CAAC8B,kBAAkB,CAAC3B,GAAD,CAAnB,CAAZ;AAAA,KAfT;AAgBH,GAlBD;AAmBH,CA9BM;AAgCP,OAAO,IAAMqB,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AACjC,SAAO;AACHf,IAAAA,IAAI,EAAEd,OAAO,CAACoC;AADX,GAAP;AAGH,CAJM;AAMP,OAAO,IAAMD,kBAAkB,GAAG,SAArBA,kBAAqB,CAAA3B,GAAG,EAAI;AACrC,SAAO;AACHM,IAAAA,IAAI,EAAEd,OAAO,CAACqC,cADX;AAEH7B,IAAAA,GAAG,EAAHA;AAFG,GAAP;AAIH,CALM;AAOP,OAAO,IAAM0B,eAAe,GAAG,SAAlBA,eAAkB,CAAAI,GAAG,EAAI;AAClC,SAAO;AACHxB,IAAAA,IAAI,EAAEd,OAAO,CAACqC;AADX,GAAP;AAGH,CAJM;AAMP,OAAO,IAAME,WAAW,GAAG,SAAdA,WAAc,CAAAC,EAAE,EAAI;AAC7B,MAAMpC,GAAG,oCAA6BoC,EAA7B,CAAT;AACA,MAAMf,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAuB,yBAAvB,EAAkDC,OAAhE;AACA,SAAO,UAAAvB,QAAQ,EAAI;AACfA,IAAAA,QAAQ,CAACoC,eAAe,EAAhB,CAAR;AACAxC,IAAAA,KAAK,UAAL,CAAaG,GAAb,EAAkB;AACZ2B,MAAAA,OAAO,EAAE;AACP,wBAAgBN,KADT;AAEP,wBAAgB;AAFT;AADG,KAAlB,EAMKlB,IANL,CAMU,UAAAC,GAAG,EAAI;AACT,UAAIA,GAAG,CAACC,EAAR,EAAY;AACRJ,QAAAA,QAAQ,CAACqC,kBAAkB,EAAnB,CAAR;AACH;;AACLrC,MAAAA,QAAQ,CAACsC,eAAe,EAAhB,CAAR;AACH,KAXD;AAYH,GAdD;AAeH,CAlBM;AAoBP,OAAO,IAAMF,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AACjC,SAAO;AACH3B,IAAAA,IAAI,EAAEd,OAAO,CAACoC;AADX,GAAP;AAGH,CAJM;AAMP,OAAO,IAAMM,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AACpC,SAAO;AACH5B,IAAAA,IAAI,EAAEd,OAAO,CAACqC;AADX,GAAP;AAGH,CAJM;AAMP,OAAO,IAAMM,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AACjC,SAAO;AACH7B,IAAAA,IAAI,EAAEd,OAAO,CAACqC;AADX,GAAP;AAGH,CAJM","sourcesContent":["import * as actions from './actionTypes';\nimport axios from 'axios'\n\nexport const fetchEvents = userId => {\n    const url = \"/api/v1/events/index\";\n    return dispatch => {\n        fetch(url)\n            .then(res => {\n                if (res.ok) {\n                    return res.json()\n                } else {\n                    dispatch(fetchEventsFail())\n                }})\n            .then(\n                res => {\n                    if (userId) {\n                        dispatch(fetchEventsForUserSuccess(res, userId))\n                    } else {\n                        dispatch(fetchEventsSuccess(res))   \n                    }\n                }\n            )\n    }\n}\n\nexport const fetchEventsSuccess = res => {\n    return {\n        type: actions.FETCH_EVENTS_SUCCESS,\n        res\n    }\n}\n\nexport const fetchEventsForUserSuccess = (res, userId) => {\n    return {\n        type: actions.FETCH_EVENTS_FOR_USER_SUCCESS,\n        res,\n        userId\n    }\n}\n\nexport const fetchEventsFail = () => {\n    return {\n        type: actions.FETCH_EVENTS_FAIL,\n    }\n}\n\nexport const createEvent = (events, location, start_time, end_time, userId, description) => {\n    const url = \"/api/v1/events/create\";\n    const body = {\n        \"events\": events,\n        \"location\": location,\n        \"start_time\": start_time,\n        \"end_time\": end_time,\n        \"userId\": userId,\n        \"description\": description\n    }\n    const token = document.querySelector('meta[name=\"csrf-token\"]').content;\n    return dispatch => {\n        dispatch(createEventInit())\n        fetch(url, {\n            method: \"POST\",\n            headers: {\n                \"X-CSRF-Token\": token,\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(body)\n        })\n        .then(res => {\n            if (res.ok) {\n                return res.json()\n            } else {\n                dispatch(createEventFail())\n            }\n        })\n        .then(res => dispatch(createEventSuccess(res)))\n    }\n}\n\nexport const createEventInit = () => {\n    return {\n        type: actions.LOADING_START\n    }\n}\n\nexport const createEventSuccess = res => {\n    return {\n        type: actions.LOADING_FINISH,\n        res\n    }\n}\n\nexport const createEventFail = err => {\n    return {\n        type: actions.LOADING_FINISH\n    }\n}\n\nexport const deleteEvent = id => {\n    const url = `/api/v1/events/destroy/${id}`;\n    const token = document.querySelector('meta[name=\"csrf-token\"]').content;\n    return dispatch => {\n        dispatch(deleteEventInit())\n        axios.delete(url, {\n              headers: {\n                \"X-CSRF-Token\": token,\n                \"Content-Type\": \"application/json\"\n              }\n            })\n            .then(res => {\n                if (res.ok) {\n                    dispatch(deleteEventSuccess())\n                }\n            dispatch(deleteEventFail())\n        })\n    }\n}\n\nexport const deleteEventInit = () => {\n    return {\n        type: actions.LOADING_START\n    }\n}\n\nexport const deleteEventSuccess = () => {\n    return {\n        type: actions.LOADING_FINISH\n    }\n}\n\nexport const deleteEventFail = () => {\n    return {\n        type: actions.LOADING_FINISH\n    }\n}"]},"metadata":{},"sourceType":"module"}