{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as actions from '../actions/actionTypes';\nvar initialState = {\n  loading: false\n};\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actions.LOADING_START:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          loading: true\n        });\n      }\n\n    case actions.LOADING_FINISH:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          loading: false\n        });\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/diehl/Documents/Projects/icfc/app/javascript/src/store/reducers/loading.js"],"names":["actions","initialState","loading","state","action","type","LOADING_START","LOADING_FINISH"],"mappings":";;;;;;AAAA,OAAO,KAAKA,OAAZ,MAAyB,wBAAzB;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE;AADQ,CAArB;AAIA,eAAe,YAAuC;AAAA,MAA9BC,KAA8B,uEAAtBF,YAAsB;AAAA,MAARG,MAAQ;;AAClD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKL,OAAO,CAACM,aAAb;AAA4B;AACxB,+CACOH,KADP;AAEID,UAAAA,OAAO,EAAE;AAFb;AAIH;;AACD,SAAKF,OAAO,CAACO,cAAb;AAA6B;AACzB,+CACOJ,KADP;AAEID,UAAAA,OAAO,EAAE;AAFb;AAIH;;AACD;AAAS,aAAOC,KAAP;AAbb;AAeH","sourcesContent":["import * as actions from '../actions/actionTypes'\n\nconst initialState = {\n    loading: false\n}\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case actions.LOADING_START: {\n            return {\n                ...state,\n                loading: true\n            }\n        }\n        case actions.LOADING_FINISH: {\n            return {\n                ...state,\n                loading: false\n            }\n        }\n        default: return state\n    }\n}"]},"metadata":{},"sourceType":"module"}